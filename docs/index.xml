<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fluid Player Documentation</title>
    <link>https://docs.fluidplayer.com/</link>
    <description>Recent content on Fluid Player Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Aug 2016 15:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://docs.fluidplayer.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Builder</title>
      <link>https://docs.fluidplayer.com/builder/</link>
      <pubDate>Wed, 10 Aug 2016 15:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/builder/</guid>
      <description>label { font-weight: normal !important; } a { color: black; text-decoration: none !important; } a.hover { color: #03a9f4; } .form-control { border-radius: 2px; }   Styling   Primary Color:   Poster Image:   Fill Container Div:     Display Logo:    Top Left Top Right Bottom Left Bottom Right   Logo Opacity: %     Logo URL:   Logo Click URL:     Controls  Autoplay:    Keyboard Controls:     Mute On Load:    Play/Pause Animation:     On Load: Show Play Button  Show Control Bar    Autohide Controls:  After  second(s) Animate    Download:    Theatre Mode:     Playback Speed:     On-pause HTML On-pause HTML:</description>
    </item>
    
    <item>
      <title>Changelog</title>
      <link>https://docs.fluidplayer.com/changelog/</link>
      <pubDate>Wed, 10 Aug 2016 15:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/changelog/</guid>
      <description>2.1.1  Pull #107  Improve the theater mode UI Fix issues with multiple player instances and download link   2.1.0  Pull #101 Quality indicator Pull #102 API functions Pull #103 Landing page displayed in In-Stream ads Pull #104 Theater mode, download &amp;amp; playback rate  2.0.0  Pull #91  New default template Add play button Play pause animations Restructuring of optional parameters Remove templates General fixes   1.</description>
    </item>
    
    <item>
      <title>Fluid Player</title>
      <link>https://docs.fluidplayer.com/</link>
      <pubDate>Wed, 10 Aug 2016 15:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/</guid>
      <description>What is Fluid Player Fluid Player is a free HTML5 video player. It is lightweight, easy to integrate and has advanced VAST capabilities.

  
What is VAST The IAB Digital Video Ad Serving Template (VAST) specification is a universal XML schema for serving ads to digital video players, and describes expected video player behavior when executing VAST-formatted ad responses.
In short, VAST makes it possible for an ad provider to serve ads to various video players using a universal way of communication which all these players understand.</description>
    </item>
    
    <item>
      <title>API</title>
      <link>https://docs.fluidplayer.com/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/api/</guid>
      <description>Introduction This section hopes to outline the functions which can alter the behaviour of Fluid Player after initialisation. This can be done by calling functions after we have our Fluid Player object. For this example we will assume we&amp;rsquo;ve used the below Fluid Player configs.
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var myFluidPlayer = fluidPlayer( &#39;my-video&#39; ); &amp;lt;/script&amp;gt;  Play To play the Fluid Player use the play() function on our myFluidPlayer object</description>
    </item>
    
    <item>
      <title>Ad Configuration</title>
      <link>https://docs.fluidplayer.com/ad_configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/ad_configuration/</guid>
      <description>There are optional parameters that can be used to customise the Fluid Player ad serving. No parameters are required and will default if not passed through. Vast options relate to the ads served and the how the player handles them
These options are specifically for when ads are shown in the player.
fluidPlayer( &#39;my-video&#39;, { vastOptions: { adList: {}, skipButtonCaption: &#39;Skip ad in [seconds]&#39;, skipButtonClickCaption: &#39;Skip ad &amp;lt;span class=&amp;quot;skip_button_icon&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&#39;, adText: null, vastTimeout: 5000, vastAdvanced: { vastLoadedCallback: (function() {}), noVastVideoCallback: (function() {}), vastVideoSkippedCallback: (function() {}), vastVideoEndedCallback: (function() {}) } } } );  adList Setup one or multiple VAST tag.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://docs.fluidplayer.com/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/configuration/</guid>
      <description>There are optional parameters that can be used to customise the Fluid Player. No parameters are required and will default if not passed through. Layout controls relate to the functionality and styling of the player itself. Vast options relate to the ads served and the how the player handles them

Layout Controls The full list of layoutControls are below:
fluidPlayer( &#39;my-video&#39;, { layoutControls: { primaryColor: false, playButtonShowing: true, playPauseAnimation: true, fillToContainer: false, autoPlay: false, mute: false, keyboardControl: true, layout: &#39;default&#39;, logo: { imageUrl: null, position: &#39;top left&#39;, clickUrl: null, opacity: 1 }, controlBar: { autoHide: true, autoHideTimeout: 3, animated: true }, timelinePreview: {}, htmlOnPauseBlock: { html: null, height: null, width: null }, playerInitCallback: (function() {}) } } );  None of the options are required but can be tailored to better suit your own design.</description>
    </item>
    
    <item>
      <title>Contact Us</title>
      <link>https://docs.fluidplayer.com/help/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/help/</guid>
      <description>If you have a technical issue or question, please submit it on GitHub
For any other query, please submit it through our contact form</description>
    </item>
    
    <item>
      <title>Demo</title>
      <link>https://docs.fluidplayer.com/demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/demo/</guid>
      <description>Default Layout  Supports VAST (Video Ad Serving Template). Comes with its own design, which is easily customizable. Timeline Preview. Lightweight. Compatible with modern web browsers.    Custom Themed Layout  Easily customised with our primaryColor configuration.    Browser-Based Layout  Ability to have more than 1 player per page. Ability to use the default video layout for the current browser.    Multiple VAST and NonLinear Ad  Ability to have more than 1 VAST (example: pre-roll and mid-roll).</description>
    </item>
    
    <item>
      <title>Integration</title>
      <link>https://docs.fluidplayer.com/integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/integration/</guid>
      <description>Quick Integration Note
We have recently launched our new Fluid Player Builder. Use the Builder to customise your player for the easiest integration yet!
 In order to set Fluid Player, three things are required:
 The Javascript and CSS files of the player; An HTML5 &amp;lt;video&amp;gt; tag; A single Javascript line of code that attaches the player to the video tag.  &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Fluid Player&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;http://cdn.</description>
    </item>
    
    <item>
      <title>Layout Configuration</title>
      <link>https://docs.fluidplayer.com/layout_configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/layout_configuration/</guid>
      <description>There are optional parameters that can be used to customise the Fluid Player. None of the options are required but can be tailored to better suit your own design. Layout controls relate to the functionality and styling of the player itself. The full list of layoutControls are below:
fluidPlayer( &#39;my-video&#39;, { layoutControls: { primaryColor: false, playButtonShowing: true, playPauseAnimation: true, fillToContainer: false, autoPlay: false, mute: false, keyboardControl: true, layout: &#39;default&#39;, allowDownload: false, playbackRateEnabled: false, allowTheatre: true, logo: { imageUrl: null, position: &#39;top left&#39;, clickUrl: null, opacity: 1 }, controlBar: { autoHide: true, autoHideTimeout: 3, animated: true }, timelinePreview: {}, htmlOnPauseBlock: { html: null, height: null, width: null }, playerInitCallback: (function() {}) } } );  primaryColor Primary color affects the following areas of the Fluid Player:</description>
    </item>
    
    <item>
      <title>Preview Configuration</title>
      <link>https://docs.fluidplayer.com/preview_configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/preview_configuration/</guid>
      <description>Adding Preview Thumbnails Preview thumbnails can be added to the Fluid Player video, to show when the progress bar is hovered over. When these are added they will replace the time that normally shows. This is a common feature that allows users to easily navigate around through the video. Below is an example video showing the thumbnails.

  
VTT Format The format used is WebVTT, a HTML5 standard.</description>
    </item>
    
    <item>
      <title>Streaming</title>
      <link>https://docs.fluidplayer.com/streaming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/streaming/</guid>
      <description>Streaming is multimedia that is constantly received by, and presented to, an end-user while being delivered by a provider. Fluid Player supports MPEG-DASH and HLS streaming. These both work by splitting the content into segments. Segments contain video or audio content, and are selected based on the highest bit rate available. This is to ensure there are as few stalls and re-buffers as possible. More details on streaming can be found here.</description>
    </item>
    
    <item>
      <title>WordPress</title>
      <link>https://docs.fluidplayer.com/wordpress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.fluidplayer.com/wordpress/</guid>
      <description>A plugin has been developed to embed Fluid Player in WordPress blogs: https://wordpress.org/plugins/fluid-player/
Fluid Player can be easily embedded by using the custom [fluid-player] shortcode. The initial version accepts the following list of named parameters:
 video: path to actual video to be used by the player. If no value is passed it will fall back to the plugin sample video. vast_file: path to vast file (optional) vtt_file: path to VTT file (optional) vtt_sprite: path to VTT sprites file (optional) layout: any of the following themes are provided with the player: default/funky/metal, if no value is passed it will fall back to &amp;lsquo;default&amp;rsquo;  Provided below is a generic example of how such a call would look like:</description>
    </item>
    
  </channel>
</rss>